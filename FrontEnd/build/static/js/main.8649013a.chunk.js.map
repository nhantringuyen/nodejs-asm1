{"version":3,"sources":["components/MovieList/MovieDetail.module.css","components/NavBar/NavBar.module.css","components/ResultList/ResultList.module.css","components/Banner/Banner.module.css","components/MovieList/MovieList.module.css","components/Banner/index.jsx","components/MovieList/MovieDetail.jsx","components/MovieList/index.jsx","services/requests.js","pages/browse/Browse.jsx","components/SearchForm/index.jsx","components/ResultList/index.js","pages/search/Search.jsx","components/NavBar/index.jsx","App.js","serviceWorker.js","index.js","components/SearchForm/SearchForm.module.css"],"names":["module","exports","Banner","_ref","fetchUrl","movie","setMovie","useState","useEffect","async","request","axios","get","randomMovie","data","results","Math","floor","random","length","error","console","fetchData","React","createElement","className","classes","banner","style","backgroundSize","backgroundImage","concat","backdrop_path","backgroundPosition","banner__contents","banner__title","title","name","original_name","banner__buttons","banner__button","banner__description","str","overview","n","substr","truncate","MovieDetail","movieData","videoKey","setVideoKey","response","id","trailer","find","video","site","type","key","fetchVideo","movieDetail","left","release_date","undefined","vote_average","right","YouTube","videoId","opts","height","width","playerVars","autoplay","src","alt","movieDetail__backdrop","MovieList","isLargeRow","isOriginal","movies","setMovies","selectedMovie","setSelectedMovie","base_url","handleMovieClick","movieSection","movieList","originalsGrid","slice","map","movieList__poster","movieList__posterLarge","poster_path","onClick","Slider","Object","assign","dots","nav","infinite","speed","slidesToShow","slidesToScroll","responsive","breakpoint","settings","initialSlide","slickWrap","slideImage","onMouseEnter","API_KEY","requests","fetchTrending","fetchNetflixOriginals","fetchTopRated","fetchActionMovies","fetchComedyMovies","fetchHorrorMovies","fetchRomanceMovies","fetchDocumentaries","fetchSearch","Browse","SearchForm","onSearch","query","setQuery","onSubmit","e","preventDefault","searchForm","value","onChange","target","placeholder","searchInput","icon","FaSearch","resetButton","handleReset","searchButton","ResultList","onSelectMovie","resultList","notfound","SearchPage","loading","setLoading","params","api_key","language","Fragment","NavBar","scrolling","setScrolling","handleScroll","window","scrollY","addEventListener","removeEventListener","navbar","navbarScrolled","logo","Link","to","logoText","search","fill","aria-hidden","data-prefix","data-icon","role","xmlns","viewBox","d","App","BrowserRouter","Routes","Route","path","element","Search","isLocalhost","Boolean","location","hostname","match","registerValidSW","swUrl","config","navigator","serviceWorker","register","then","registration","onupdatefound","installingWorker","installing","onstatechange","state","controller","log","onUpdate","onSuccess","catch","ReactDOM","render","StrictMode","document","getElementById","URL","process","href","origin","fetch","headers","contentType","status","indexOf","ready","unregister","reload","checkValidServiceWorker"],"mappings":"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","file":"static/js/main.8649013a.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"movieDetail\":\"MovieDetail_movieDetail__3cvc5\",\"left\":\"MovieDetail_left__3dxRH\",\"right\":\"MovieDetail_right__MTQYX\",\"movie-title\":\"MovieDetail_movie-title__1YaXz\",\"movie-meta\":\"MovieDetail_movie-meta__25mAB\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"navbar\":\"NavBar_navbar__St5gJ\",\"navbarScrolled\":\"NavBar_navbarScrolled__j1Ork\",\"logoText\":\"NavBar_logoText__1s4nD\",\"search\":\"NavBar_search__2j0fv\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"resultList\":\"ResultList_resultList__1F3mE\",\"notfound\":\"ResultList_notfound__sfDY5\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"banner\":\"Banner_banner__1_dmI\",\"banner__contents\":\"Banner_banner__contents__1aYrB\",\"banner__title\":\"Banner_banner__title__9lJ9_\",\"banner__buttons\":\"Banner_banner__buttons__LiZ7w\",\"banner__button\":\"Banner_banner__button__2VApa\",\"banner__description\":\"Banner_banner__description__2zEwC\",\"banner--fadeBottom\":\"Banner_banner--fadeBottom__3--uP\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"movieList\":\"MovieList_movieList__3kKsA\",\"movieSection\":\"MovieList_movieSection__-HL5Z\",\"originalsGrid\":\"MovieList_originalsGrid__391Jy\",\"movieList__posterLarge\":\"MovieList_movieList__posterLarge__3EYdZ\",\"movieList__poster\":\"MovieList_movieList__poster__38UBv\",\"slideImage\":\"MovieList_slideImage__3cm7X\"};","import React, { useState, useEffect } from 'react';\r\nimport axios from 'axios';\r\nimport classes from './Banner.module.css'; // Import CSS Module\r\n\r\nfunction Banner({ fetchUrl}) {\r\n    const [movie, setMovie] = useState({});\r\n\r\n    useEffect(() => {\r\n        const fetchData = async () => {\r\n            try {\r\n                const request = await axios.get(fetchUrl);\r\n                const randomMovie = request.data.results[\r\n                    Math.floor(Math.random() * request.data.results.length - 1)\r\n                    ];\r\n                setMovie(randomMovie);\r\n            } catch (error) {\r\n                console.error(\"Lỗi khi lấy dữ liệu từ API\", error);\r\n            }\r\n        };\r\n\r\n        fetchData();\r\n    }, [fetchUrl]);\r\n\r\n    const truncate = (str, n) => {\r\n        return str?.length > n ? str.substr(0, n - 1) + \"...\" : str;\r\n    };\r\n\r\n    return (\r\n        <header\r\n            className={classes.banner}\r\n            style={{\r\n                backgroundSize: \"cover\",\r\n                backgroundImage: `url(\"https://image.tmdb.org/t/p/original${movie?.backdrop_path}\")`,\r\n                backgroundPosition: \"center center\",\r\n            }}\r\n        >\r\n            <div className={classes.banner__contents}>\r\n                <h1 className={classes.banner__title}>\r\n                    {movie?.title || movie?.name || movie?.original_name}\r\n                </h1>\r\n                <div className={classes.banner__buttons}>\r\n                    <button className={classes.banner__button}>Play</button>\r\n                    <button className={classes.banner__button}>My List</button>\r\n                </div>\r\n                <h1 className={classes.banner__description}>\r\n                    {truncate(movie?.overview, 150)}\r\n                </h1>\r\n            </div>\r\n            <div className={classes['banner--fadeBottom']}></div>\r\n        </header>\r\n    );\r\n}\r\n\r\nexport default Banner;\r\n","import React, { useEffect, useState } from 'react';\r\nimport axios from 'axios';\r\nimport YouTube from 'react-youtube';\r\nimport classes from './MovieDetail.module.css'; // CSS module for styling\r\n\r\nconst MovieDetail = ({ movieData }) => {\r\n    const [videoKey, setVideoKey] = useState(null);\r\n    const base_url = \"https://image.tmdb.org/t/p/original/\";\r\n\r\n    useEffect(() => {\r\n        if (movieData) {\r\n            const fetchVideo = async() => {\r\n                try {\r\n                    const response = await axios.get(`https://api.themoviedb.org/3/movie/${movieData.id}/videos?api_key=391c32141f9d013bc872bec944088b32`);\r\n                    const videos = response.data.results;\r\n                    const trailer = videos.find(video => video.site === 'YouTube' && (video.type === 'Trailer' || video.type === 'Teaser'));\r\n                    setVideoKey(trailer ? trailer.key : null);\r\n                } catch (error) {\r\n                    console.error(\"Lỗi khi lấy dữ liệu trailer\", error);\r\n                }\r\n            };\r\n            fetchVideo();\r\n        }\r\n    }, [movieData]);\r\n    if (!movieData) return null;\r\n\r\n    return (\r\n        <div className={classes.movieDetail}>\r\n            <div className={classes.left}>\r\n                <h3 className={classes['movie-title']}>\r\n                    {movieData.title || movieData.name ? movieData.title || movieData.name : \"Title not available\"}\r\n                </h3>\r\n                <ul className={classes['movie-meta']}>\r\n                    {movieData.release_date && <li>Release date: {movieData.release_date}</li>}\r\n                    {movieData.vote_average !== undefined && <li>Vote: {movieData.vote_average} / 10</li>}\r\n                </ul>\r\n                <p>{movieData.overview ? movieData.overview : \"Overview not available.\"}</p>\r\n            </div>\r\n            <div className={classes.right}>\r\n                {videoKey ? (\r\n                    <YouTube\r\n                        videoId={videoKey}\r\n                        opts={{height: '400', width: '100%', playerVars: {autoplay: 0}}}\r\n                    />\r\n                ) : (\r\n                    <figure>\r\n                        <img\r\n                            src={`${base_url}${movieData.backdrop_path}`}\r\n                            alt={movieData.name}\r\n                        className={classes.movieDetail__backdrop}\r\n                    /></figure>\r\n                )}\r\n            </div>\r\n        </div>\r\n    );\r\n};\r\n\r\nexport default MovieDetail;\r\n","import React, { useState, useEffect } from 'react';\r\nimport axios from 'axios';\r\nimport Slider from \"react-slick\";\r\nimport classes from './MovieList.module.css'; // Import CSS module\r\nimport \"slick-carousel/slick/slick.css\";\r\nimport \"slick-carousel/slick/slick-theme.css\";\r\nimport MovieDetail from './MovieDetail'; // Import MovieDetail component\r\n\r\n\r\nfunction MovieList({ title, fetchUrl, isLargeRow = false, isOriginal = false }) {\r\n    const [movies, setMovies] = useState([]);\r\n    const [selectedMovie, setSelectedMovie] = useState(null);\r\n\r\n    useEffect(() => {\r\n        const fetchData = async () => {\r\n            try {\r\n                const request = await axios.get(fetchUrl);\r\n                setMovies(request.data.results);\r\n            } catch (error) {\r\n                console.error(\"Lỗi khi lấy dữ liệu từ API\", error);\r\n            }\r\n        };\r\n\r\n        fetchData();\r\n    }, [fetchUrl]);\r\n\r\n    const base_url = \"https://image.tmdb.org/t/p/original/\";\r\n\r\n    const sliderSettings = {\r\n        dots: false,\r\n        nav:false,\r\n        infinite: true,\r\n        speed: 500,\r\n        slidesToShow: 6,\r\n        slidesToScroll: 6,\r\n        responsive: [\r\n            {\r\n                breakpoint: 1024,\r\n                settings: {\r\n                    slidesToShow: 5,\r\n                    slidesToScroll: 5,\r\n                    infinite: true,\r\n                },\r\n            },\r\n            {\r\n                breakpoint: 600,\r\n                settings: {\r\n                    slidesToShow: 3,\r\n                    slidesToScroll: 3,\r\n                    initialSlide: 2,\r\n                },\r\n            },\r\n            {\r\n                breakpoint: 480,\r\n                settings: {\r\n                    slidesToShow: 2,\r\n                    slidesToScroll: 2,\r\n                },\r\n            },\r\n        ],\r\n    };\r\n    const handleMovieClick = (movie) => {\r\n        if (selectedMovie && selectedMovie.id === movie.id) {\r\n            setSelectedMovie(null); // Ẩn thông tin nếu người dùng click lại vào bộ phim đang xem\r\n        } else {\r\n            setSelectedMovie(movie); // Hiển thị thông tin của bộ phim khác\r\n        }\r\n    };\r\n    return (\r\n        <section className={classes.movieSection}>\r\n            <div className={classes.movieList}>\r\n                <h2>{title}</h2>\r\n                {isOriginal ? (\r\n                    <div className={classes.originalsGrid}>\r\n                        {movies.slice(0, 10).map((movie) => (\r\n                            <figure key={movie.id}>\r\n                            <img\r\n                                className={`${classes.movieList__poster} ${classes.movieList__posterLarge}`}\r\n                                src={`${base_url}${movie.poster_path}`}\r\n                                alt={movie.name || movie.title}\r\n                                onClick={() => handleMovieClick(movie)}\r\n                            />\r\n                            </figure>\r\n                        ))}\r\n                    </div>\r\n                ) : (\r\n                    <Slider {...sliderSettings} className={classes.slickWrap}>\r\n                        {movies.map((movie) => (\r\n                            <figure key={movie.id} className={classes.slideImage}>\r\n                            <img\r\n                                className={classes.movieList__poster}\r\n                                src={`${base_url}${movie.backdrop_path}`}\r\n                                alt={movie.name || movie.title}\r\n                                onMouseEnter={() => {} /* Add hover animation here */}\r\n                                onClick={() => handleMovieClick(movie)}\r\n                            />\r\n                            </figure>\r\n                        ))}\r\n                    </Slider>\r\n                )}\r\n            </div>\r\n            {selectedMovie && <MovieDetail movieData={selectedMovie} />}\r\n        </section>\r\n    );\r\n}\r\n\r\nexport default MovieList;\r\n","const API_KEY = '391c32141f9d013bc872bec944088b32';\r\nconst requests = {\r\n    fetchTrending: `https://api.themoviedb.org/3/trending/all/week?api_key=${API_KEY}&language=en-US`,\r\n    fetchNetflixOriginals: `https://api.themoviedb.org/3/discover/tv?api_key=${API_KEY}&with_network=123`,\r\n    fetchTopRated: `https://api.themoviedb.org/3/movie/top_rated?api_key=${API_KEY}&language=en-US`,\r\n    fetchActionMovies: `https://api.themoviedb.org/3/discover/movie?api_key=${API_KEY}&with_genres=28`,\r\n    fetchComedyMovies: `https://api.themoviedb.org/3/discover/movie?api_key=${API_KEY}&with_genres=35`,\r\n    fetchHorrorMovies: `https://api.themoviedb.org/3/discover/movie?api_key=${API_KEY}&with_genres=27`,\r\n    fetchRomanceMovies: `https://api.themoviedb.org/3/discover/movie?api_key=${API_KEY}&with_genres=10749`,\r\n    fetchDocumentaries: `https://api.themoviedb.org/3/discover/movie?api_key=${API_KEY}&with_genres=99`,\r\n    fetchSearch: `/search/movie?api_key=${API_KEY}&language=en-US`,\r\n};\r\nexport default requests;\r\n","import React from 'react';\r\nimport Banner from '../../components/Banner';\r\nimport MovieList from '../../components/MovieList';\r\nimport requests from '../../services/requests';\r\nfunction Browse() {\r\n\treturn (\r\n\t\t<div className=\"app\">\r\n\t\t\t<Banner fetchUrl={requests.fetchNetflixOriginals}/>\r\n\t\t\t<MovieList title=\"Originals\" fetchUrl={requests.fetchNetflixOriginals} isLargeRow isOriginal/>\r\n\t\t\t<MovieList title=\"Xu hướng\" fetchUrl={requests.fetchTrending} />\r\n\t\t\t<MovieList title=\"Xếp hạng cao\" fetchUrl={requests.fetchTopRated} />\r\n\t\t\t<MovieList title=\"Hành động\" fetchUrl={requests.fetchActionMovies} />\r\n\t\t\t<MovieList title=\"Hài\" fetchUrl={requests.fetchComedyMovies} />\r\n\t\t\t<MovieList title=\"Kinh dị\" fetchUrl={requests.fetchHorrorMovies} />\r\n\t\t\t<MovieList title=\"Lãng mạn\" fetchUrl={requests.fetchRomanceMovies} />\r\n\t\t\t<MovieList title=\"Tài liệu\" fetchUrl={requests.fetchDocumentaries} />\r\n\t\t</div>\r\n\t);\r\n}\r\n\r\nexport default Browse;\r\n\r\n","import React, { useState } from 'react';\r\nimport classes from './SearchForm.module.css';\r\nimport { FaSearch } from 'react-icons/fa'; // Thêm icon tìm kiếm\r\n\r\nfunction SearchForm({ onSearch }) {\r\n    const [query, setQuery] = useState('');\r\n\r\n    const handleSearch = (e) => {\r\n        e.preventDefault();\r\n        onSearch(query);\r\n    };\r\n\r\n    const handleReset = () => {\r\n        setQuery('');\r\n        onSearch('');\r\n    };\r\n\r\n    return (\r\n        <form onSubmit={handleSearch} className={classes.searchForm}>\r\n            <div className={classes['input-wrap']}>\r\n                <input\r\n                    type=\"text\"\r\n                    value={query}\r\n                    onChange={(e) => setQuery(e.target.value)}\r\n                    placeholder=\"Search for a movie...\"\r\n                    className={classes.searchInput}\r\n                />\r\n                <span className={classes.icon}><FaSearch/></span>\r\n            </div>\r\n            <div className={classes['button-wrap']}>\r\n                <button type=\"button\" className={classes.resetButton} onClick={handleReset}>\r\n                    RESET\r\n                </button>\r\n                <button type=\"submit\" className={classes.searchButton}>\r\n                    SEARCH\r\n                </button>\r\n            </div>\r\n        </form>\r\n);\r\n}\r\n\r\nexport default SearchForm;\r\n","import React from 'react';\r\nimport classes from './ResultList.module.css';\r\n\r\nfunction ResultList({ movies, onSelectMovie }) {\r\n    const base_url = \"https://image.tmdb.org/t/p/original/\";\r\n\r\n    return (\r\n        <div className={classes.resultList}>\r\n            {movies.length > 0 ? (\r\n                movies.map(movie => (\r\n                    <img\r\n                        key={movie.id}\r\n                        src={`${base_url}${movie.poster_path}`}\r\n                        alt={movie.title}\r\n                        onClick={() => onSelectMovie(movie)}\r\n                    />\r\n                ))\r\n            ) : (\r\n                <p className={classes.notfound}>Không có bộ phim nào được tìm thấy.</p>\r\n            )}\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default ResultList;\r\n","import React, { useState } from 'react';\r\nimport axios from 'axios';\r\nimport SearchForm from '../../components/SearchForm';\r\nimport ResultList from '../../components/ResultList';\r\nimport MovieDetail from '../../components/MovieList/MovieDetail'; // Assume you have this component already\r\n\r\nfunction SearchPage() {\r\n\tconst [movies, setMovies] = useState([]);\r\n\tconst [selectedMovie, setSelectedMovie] = useState(null);\r\n\tconst [loading, setLoading] = useState(false); // New loading state\r\n\r\n\tconst searchMovies = async (query) => {\r\n\t\tconst api_key = '391c32141f9d013bc872bec944088b32';\r\n\t\tsetLoading(true); // Start loading\r\n\t\ttry {\r\n\t\t\tconst response = await axios.get('https://api.themoviedb.org/3/search/movie', {\r\n\t\t\t\tparams: { api_key, query, language: 'en' },\r\n\t\t\t});\r\n\t\t\tsetMovies(response.data.results);\r\n\t\t} catch (error) {\r\n\t\t\tconsole.error('Error fetching movies:', error);\r\n\t\t} finally {\r\n\t\t\tsetLoading(false); // Stop loading\r\n\t\t}\r\n\t};\r\n\r\n\treturn (\r\n\t\t<div>\r\n\t\t\t<SearchForm onSearch={searchMovies} />\r\n\t\t\t{loading ? (\r\n\t\t\t\t<p>Loading...</p> // Loading indicator\r\n\t\t\t) : (\r\n\t\t\t\t<>\r\n\t\t\t\t<ResultList movies={movies} onSelectMovie={setSelectedMovie} />\r\n\t\t\t    {selectedMovie && <MovieDetail movieData={selectedMovie} />}\r\n\t\t\t\t</>\r\n\t\t\t)}\r\n\r\n\t\t</div>\r\n\t);\r\n}\r\n\r\nexport default SearchPage;\r\n","import React, { useState, useEffect } from 'react';\r\nimport { Link } from 'react-router-dom';\r\nimport classes from './NavBar.module.css'; // Import CSS Module\r\n\r\nfunction NavBar() {\r\n    const [scrolling, setScrolling] = useState(false);\r\n\r\n    // Hàm xử lý sự kiện scroll\r\n    useEffect(() => {\r\n        const handleScroll = () => {\r\n            if (window.scrollY > 100) {\r\n                setScrolling(true);\r\n            } else {\r\n                setScrolling(false);\r\n            }\r\n        };\r\n\r\n        // Lắng nghe sự kiện scroll\r\n        window.addEventListener('scroll', handleScroll);\r\n\r\n        // Dọn dẹp khi component bị unmount\r\n        return () => {\r\n            window.removeEventListener('scroll', handleScroll);\r\n        };\r\n    }, []);\r\n\r\n    return (\r\n        <nav className={`${classes.navbar} ${scrolling ? classes.navbarScrolled : ''}`}>\r\n            <div className={classes.logo}>\r\n                <Link to=\"/\" className={classes.logoText}>Movie App</Link>\r\n            </div>\r\n            <div className={classes.search}>\r\n                <Link to=\"/search\">\r\n                    <svg\r\n                        className=\"svg-inline--fa fa-search fa-w-16\"\r\n                        fill=\"#ccc\"\r\n                        aria-hidden=\"true\"\r\n                        data-prefix=\"fas\"\r\n                        data-icon=\"search\"\r\n                        role=\"img\"\r\n                        xmlns=\"http://www.w3.org/2000/svg\"\r\n                        viewBox=\"0 0 512 512\"\r\n                    >\r\n                        <path d=\"M505 442.7L405.3 343c-4.5-4.5-10.6-7-17-7H372c27.6-35.3 44-79.7 44-128C416 93.1 322.9 0 208 0S0 93.1 0 208s93.1 208 208 208c48.3 0 92.7-16.4 128-44v16.3c0 6.4 2.5 12.5 7 17l99.7 99.7c9.4 9.4 24.6 9.4 33.9 0l28.3-28.3c9.4-9.4 9.4-24.6.1-34zM208 336c-70.7 0-128-57.2-128-128 0-70.7 57.2-128 128-128 70.7 0 128 57.2 128 128 0 70.7-57.2 128-128 128z\"></path>\r\n                    </svg>\r\n                </Link>\r\n            </div>\r\n        </nav>\r\n    );\r\n}\r\n\r\nexport default NavBar;\r\n","import React from 'react';\r\nimport {\r\n\tBrowserRouter,\r\n\tRoutes,\r\n\tRoute,\r\n} from \"react-router-dom\";\r\n\r\nimport Browse from './pages/browse/Browse';\r\nimport Search from './pages/search/Search';\r\nimport NavBar from './components/NavBar';  // Import NavBar\r\n\r\n\r\nfunction App() {\r\n\treturn (\r\n\t\t<BrowserRouter>\r\n\t\t\t<NavBar /> {/* Đặt NavBar ở đây để nó xuất hiện trên mọi trang */}\r\n\t\t\t<Routes>\r\n\t\t\t<Route path=\"/\" element={<Browse/>}/>\r\n\t\t\t<Route path=\"/search\" element={<Search/>}/>\r\n\t\t  </Routes>\r\n\t\t</BrowserRouter>\r\n\t  );\r\n}\r\n\r\nexport default App;\r\n","// This optional code is used to register a service worker.\r\n// register() is not called by default.\r\n\r\n// This lets the app load faster on subsequent visits in production, and gives\r\n// it offline capabilities. However, it also means that developers (and users)\r\n// will only see deployed updates on subsequent visits to a page, after all the\r\n// existing tabs open on the page have been closed, since previously cached\r\n// resources are updated in the background.\r\n\r\n// To learn more about the benefits of this model and instructions on how to\r\n// opt-in, read https://bit.ly/CRA-PWA\r\n\r\nconst isLocalhost = Boolean(\r\n\twindow.location.hostname === 'localhost' ||\r\n\t\t// [::1] is the IPv6 localhost address.\r\n\t\twindow.location.hostname === '[::1]' ||\r\n\t\t// 127.0.0.0/8 are considered localhost for IPv4.\r\n\t\twindow.location.hostname.match(\r\n\t\t\t/^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\r\n\t\t)\r\n);\r\n\r\nexport function register(config) {\r\n\tif (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\r\n\t\t// The URL constructor is available in all browsers that support SW.\r\n\t\tconst publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\r\n\t\tif (publicUrl.origin !== window.location.origin) {\r\n\t\t\t// Our service worker won't work if PUBLIC_URL is on a different origin\r\n\t\t\t// from what our page is served on. This might happen if a CDN is used to\r\n\t\t\t// serve assets; see https://github.com/facebook/create-react-app/issues/2374\r\n\t\t\treturn;\r\n\t\t}\r\n\r\n\t\twindow.addEventListener('load', () => {\r\n\t\t\tconst swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\r\n\r\n\t\t\tif (isLocalhost) {\r\n\t\t\t\t// This is running on localhost. Let's check if a service worker still exists or not.\r\n\t\t\t\tcheckValidServiceWorker(swUrl, config);\r\n\r\n\t\t\t\t// Add some additional logging to localhost, pointing developers to the\r\n\t\t\t\t// service worker/PWA documentation.\r\n\t\t\t\tnavigator.serviceWorker.ready.then(() => {\r\n\t\t\t\t\tconsole.log(\r\n\t\t\t\t\t\t'This web app is being served cache-first by a service ' +\r\n\t\t\t\t\t\t\t'worker. To learn more, visit https://bit.ly/CRA-PWA'\r\n\t\t\t\t\t);\r\n\t\t\t\t});\r\n\t\t\t} else {\r\n\t\t\t\t// Is not localhost. Just register service worker\r\n\t\t\t\tregisterValidSW(swUrl, config);\r\n\t\t\t}\r\n\t\t});\r\n\t}\r\n}\r\n\r\nfunction registerValidSW(swUrl, config) {\r\n\tnavigator.serviceWorker\r\n\t\t.register(swUrl)\r\n\t\t.then((registration) => {\r\n\t\t\tregistration.onupdatefound = () => {\r\n\t\t\t\tconst installingWorker = registration.installing;\r\n\t\t\t\tif (installingWorker == null) {\r\n\t\t\t\t\treturn;\r\n\t\t\t\t}\r\n\t\t\t\tinstallingWorker.onstatechange = () => {\r\n\t\t\t\t\tif (installingWorker.state === 'installed') {\r\n\t\t\t\t\t\tif (navigator.serviceWorker.controller) {\r\n\t\t\t\t\t\t\t// At this point, the updated precached content has been fetched,\r\n\t\t\t\t\t\t\t// but the previous service worker will still serve the older\r\n\t\t\t\t\t\t\t// content until all client tabs are closed.\r\n\t\t\t\t\t\t\tconsole.log(\r\n\t\t\t\t\t\t\t\t'New content is available and will be used when all ' +\r\n\t\t\t\t\t\t\t\t\t'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\r\n\t\t\t\t\t\t\t);\r\n\r\n\t\t\t\t\t\t\t// Execute callback\r\n\t\t\t\t\t\t\tif (config && config.onUpdate) {\r\n\t\t\t\t\t\t\t\tconfig.onUpdate(registration);\r\n\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t} else {\r\n\t\t\t\t\t\t\t// At this point, everything has been precached.\r\n\t\t\t\t\t\t\t// It's the perfect time to display a\r\n\t\t\t\t\t\t\t// \"Content is cached for offline use.\" message.\r\n\t\t\t\t\t\t\tconsole.log('Content is cached for offline use.');\r\n\r\n\t\t\t\t\t\t\t// Execute callback\r\n\t\t\t\t\t\t\tif (config && config.onSuccess) {\r\n\t\t\t\t\t\t\t\tconfig.onSuccess(registration);\r\n\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t}\r\n\t\t\t\t\t}\r\n\t\t\t\t};\r\n\t\t\t};\r\n\t\t})\r\n\t\t.catch((error) => {\r\n\t\t\tconsole.error('Error during service worker registration:', error);\r\n\t\t});\r\n}\r\n\r\nfunction checkValidServiceWorker(swUrl, config) {\r\n\t// Check if the service worker can be found. If it can't reload the page.\r\n\tfetch(swUrl, {\r\n\t\theaders: { 'Service-Worker': 'script' },\r\n\t})\r\n\t\t.then((response) => {\r\n\t\t\t// Ensure service worker exists, and that we really are getting a JS file.\r\n\t\t\tconst contentType = response.headers.get('content-type');\r\n\t\t\tif (\r\n\t\t\t\tresponse.status === 404 ||\r\n\t\t\t\t(contentType != null && contentType.indexOf('javascript') === -1)\r\n\t\t\t) {\r\n\t\t\t\t// No service worker found. Probably a different app. Reload the page.\r\n\t\t\t\tnavigator.serviceWorker.ready.then((registration) => {\r\n\t\t\t\t\tregistration.unregister().then(() => {\r\n\t\t\t\t\t\twindow.location.reload();\r\n\t\t\t\t\t});\r\n\t\t\t\t});\r\n\t\t\t} else {\r\n\t\t\t\t// Service worker found. Proceed as normal.\r\n\t\t\t\tregisterValidSW(swUrl, config);\r\n\t\t\t}\r\n\t\t})\r\n\t\t.catch(() => {\r\n\t\t\tconsole.log(\r\n\t\t\t\t'No internet connection found. App is running in offline mode.'\r\n\t\t\t);\r\n\t\t});\r\n}\r\n\r\nexport function unregister() {\r\n\tif ('serviceWorker' in navigator) {\r\n\t\tnavigator.serviceWorker.ready\r\n\t\t\t.then((registration) => {\r\n\t\t\t\tregistration.unregister();\r\n\t\t\t})\r\n\t\t\t.catch((error) => {\r\n\t\t\t\tconsole.error(error.message);\r\n\t\t\t});\r\n\t}\r\n}\r\n","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport './index.css';\r\nimport App from './App';\r\nimport * as serviceWorker from './serviceWorker';\r\n\r\nReactDOM.render(\r\n\t<React.StrictMode>\r\n\t\t<App />\r\n\t</React.StrictMode>,\r\n\tdocument.getElementById('root')\r\n);\r\n\r\n// If you want your app to work offline and load faster, you can change\r\n// unregister() to register() below. Note this comes with some pitfalls.\r\n// Learn more about service workers: https://bit.ly/CRA-PWA\r\nserviceWorker.register();\r\n","// extracted by mini-css-extract-plugin\nmodule.exports = {\"searchForm\":\"SearchForm_searchForm__tixFZ\",\"input-wrap\":\"SearchForm_input-wrap__3w12e\",\"searchInput\":\"SearchForm_searchInput__3j4x5\",\"icon\":\"SearchForm_icon__3G4v4\",\"button-wrap\":\"SearchForm_button-wrap__3T-QY\",\"resetButton\":\"SearchForm_resetButton__3TgcV\",\"searchButton\":\"SearchForm_searchButton__3HQx4\"};"],"sourceRoot":""}